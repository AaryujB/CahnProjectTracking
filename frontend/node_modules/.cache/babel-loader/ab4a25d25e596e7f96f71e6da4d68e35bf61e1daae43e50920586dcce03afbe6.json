{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\nexport const projectAPI = {\n  getAll: () => api.get('/projects'),\n  getById: id => api.get(`/projects/${id}`),\n  create: project => api.post('/projects', project),\n  update: (id, project) => api.put(`/projects/${id}`, project),\n  assignDevelopers: (id, developerIds) => api.post(`/projects/${id}/assign`, {\n    developerIds\n  }),\n  addPhase: (id, phase) => api.post(`/projects/${id}/phases`, phase),\n  updatePhase: (projectId, phaseId, data) => api.put(`/projects/${projectId}/phases/${phaseId}`, data),\n  delete: projectId => api.delete(`/projects/${projectId}`) // Changed from axios to api\n};\nexport const developerAPI = {\n  getAll: () => api.get('/developers'),\n  getProfile: () => api.get('/developers/profile'),\n  updateProfile: data => api.put('/developers/profile', data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","post","register","userData","projectAPI","getAll","get","getById","id","project","update","put","assignDevelopers","developerIds","addPhase","phase","updatePhase","projectId","phaseId","data","delete","developerAPI","getProfile","updateProfile"],"sources":["/Users/aaryujbhushan/Documents/cahnprojecttracking/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n};\n\nexport const projectAPI = {\n    getAll: () => api.get('/projects'),\n    getById: (id) => api.get(`/projects/${id}`),\n    create: (project) => api.post('/projects', project),\n    update: (id, project) => api.put(`/projects/${id}`, project),\n    assignDevelopers: (id, developerIds) => api.post(`/projects/${id}/assign`, { developerIds }),\n    addPhase: (id, phase) => api.post(`/projects/${id}/phases`, phase),\n    updatePhase: (projectId, phaseId, data) => api.put(`/projects/${projectId}/phases/${phaseId}`, data),\n    delete: (projectId) => api.delete(`/projects/${projectId}`), // Changed from axios to api\n  };\n\nexport const developerAPI = {\n  getAll: () => api.get('/developers'),\n  getProfile: () => api.get('/developers/profile'),\n  updateProfile: (data) => api.put('/developers/profile', data),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKxB,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAK3B,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ;AAC7D,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG;EACtBC,MAAM,EAAEA,CAAA,KAAM7B,GAAG,CAAC8B,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKhC,GAAG,CAAC8B,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3C/B,MAAM,EAAGgC,OAAO,IAAKjC,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEQ,OAAO,CAAC;EACnDC,MAAM,EAAEA,CAACF,EAAE,EAAEC,OAAO,KAAKjC,GAAG,CAACmC,GAAG,CAAC,aAAaH,EAAE,EAAE,EAAEC,OAAO,CAAC;EAC5DG,gBAAgB,EAAEA,CAACJ,EAAE,EAAEK,YAAY,KAAKrC,GAAG,CAACyB,IAAI,CAAC,aAAaO,EAAE,SAAS,EAAE;IAAEK;EAAa,CAAC,CAAC;EAC5FC,QAAQ,EAAEA,CAACN,EAAE,EAAEO,KAAK,KAAKvC,GAAG,CAACyB,IAAI,CAAC,aAAaO,EAAE,SAAS,EAAEO,KAAK,CAAC;EAClEC,WAAW,EAAEA,CAACC,SAAS,EAAEC,OAAO,EAAEC,IAAI,KAAK3C,GAAG,CAACmC,GAAG,CAAC,aAAaM,SAAS,WAAWC,OAAO,EAAE,EAAEC,IAAI,CAAC;EACpGC,MAAM,EAAGH,SAAS,IAAKzC,GAAG,CAAC4C,MAAM,CAAC,aAAaH,SAAS,EAAE,CAAC,CAAE;AAC/D,CAAC;AAEH,OAAO,MAAMI,YAAY,GAAG;EAC1BhB,MAAM,EAAEA,CAAA,KAAM7B,GAAG,CAAC8B,GAAG,CAAC,aAAa,CAAC;EACpCgB,UAAU,EAAEA,CAAA,KAAM9C,GAAG,CAAC8B,GAAG,CAAC,qBAAqB,CAAC;EAChDiB,aAAa,EAAGJ,IAAI,IAAK3C,GAAG,CAACmC,GAAG,CAAC,qBAAqB,EAAEQ,IAAI;AAC9D,CAAC;AAED,eAAe3C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}