{"ast":null,"code":"//frontend/services/api.js\n\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Project API\nexport const projectAPI = {\n  getAll: () => api.get('/projects'),\n  getById: id => api.get(`/projects/${id}`),\n  create: projectData => api.post('/projects', projectData),\n  update: (id, projectData) => api.put(`/projects/${id}`, projectData),\n  delete: id => api.delete(`/projects/${id}`),\n  assignDevelopers: (id, developerIds) => api.post(`/projects/${id}/assign`, {\n    developerIds\n  }),\n  removeDevelopers: (id, developerIds) => api.post(`/projects/${id}/remove`, {\n    developerIds\n  }),\n  addPhase: (id, phaseData) => api.post(`/projects/${id}/phases`, phaseData),\n  updatePhase: (projectId, phaseId, phaseData) => api.put(`/projects/${projectId}/phases/${phaseId}`, phaseData)\n};\n\n// Developer API (Enhanced)\nexport const developerAPI = {\n  getAll: () => api.get('/developers'),\n  getById: id => api.get(`/developers/${id}`),\n  update: (id, developerData) => api.put(`/developers/${id}`, developerData),\n  delete: id => api.delete(`/developers/${id}`),\n  getStats: id => api.get(`/developers/${id}/stats`)\n};\n\n// User API (for general user operations)\nexport const userAPI = {\n  getAll: () => api.get('/users'),\n  getById: id => api.get(`/users/${id}`),\n  update: (id, userData) => api.put(`/users/${id}`, userData),\n  delete: id => api.delete(`/users/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","post","register","userData","getCurrentUser","get","projectAPI","getAll","getById","id","projectData","update","put","delete","assignDevelopers","developerIds","removeDevelopers","addPhase","phaseData","updatePhase","projectId","phaseId","developerAPI","developerData","getStats","userAPI"],"sources":["/Users/aaryujbhushan/Documents/cahnprojecttracking/frontend/src/services/api.js"],"sourcesContent":["//frontend/services/api.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me'),\n};\n\n// Project API\nexport const projectAPI = {\n  getAll: () => api.get('/projects'),\n  getById: (id) => api.get(`/projects/${id}`),\n  create: (projectData) => api.post('/projects', projectData),\n  update: (id, projectData) => api.put(`/projects/${id}`, projectData),\n  delete: (id) => api.delete(`/projects/${id}`),\n  assignDevelopers: (id, developerIds) => api.post(`/projects/${id}/assign`, { developerIds }),\n  removeDevelopers: (id, developerIds) => api.post(`/projects/${id}/remove`, { developerIds }),\n  addPhase: (id, phaseData) => api.post(`/projects/${id}/phases`, phaseData),\n  updatePhase: (projectId, phaseId, phaseData) => api.put(`/projects/${projectId}/phases/${phaseId}`, phaseData),\n};\n\n// Developer API (Enhanced)\nexport const developerAPI = {\n  getAll: () => api.get('/developers'),\n  getById: (id) => api.get(`/developers/${id}`),\n  update: (id, developerData) => api.put(`/developers/${id}`, developerData),\n  delete: (id) => api.delete(`/developers/${id}`),\n  getStats: (id) => api.get(`/developers/${id}/stats`),\n};\n\n// User API (for general user operations)\nexport const userAPI = {\n  getAll: () => api.get('/users'),\n  getById: (id) => api.get(`/users/${id}`),\n  update: (id, userData) => api.put(`/users/${id}`, userData),\n  delete: (id) => api.delete(`/users/${id}`),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}